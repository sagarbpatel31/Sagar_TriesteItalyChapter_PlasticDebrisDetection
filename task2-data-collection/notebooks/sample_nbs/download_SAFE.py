# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P-fCf7O6Hfb3XWTIWSm0OEgZzxJHtARp
"""

! pip install requests

import requests
import os
from datetime import date, timedelta

# CDSE credentials
username = "yourusername"
password = "yourpassword"

# Function to get OAuth2 access token
def get_access_token(username, password):
    url = "https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token"
    payload = {
        "grant_type": "password",
        "username": username,
        "password": password,
        "client_id": "cdse-public"
    }
    response = requests.post(url, data=payload)
    response.raise_for_status()
    return response.json()["access_token"]

# Define search parameters
today = date.today()
yesterday = today - timedelta(days=1)
bbox = "POLYGON((3.0 51.0, 4.0 51.0, 4.0 52.0, 3.0 52.0, 3.0 51.0))"
data_collection = "SENTINEL-2"

# Search for Sentinel-2 L1C products
def search_sentinel2(token):
    url = (
        f"https://catalogue.dataspace.copernicus.eu/odata/v1/Products?"
        f"$filter=Collection/Name eq '{data_collection}' and "
        f"OData.CSC.Intersects(area=geography'SRID=4326;{bbox}') and "
        f"ContentDate/Start gt {yesterday.strftime('%Y-%m-%d')}T00:00:00.000Z and "
        f"ContentDate/Start lt {today.strftime('%Y-%m-%d')}T00:00:00.000Z and "
        f"Attributes/OData.CSC.StringAttribute/any(att:att/Name eq 'productType' and att/Value eq 'S2MSI1C')&"
        f"$top=1"
    )
    print("Query URL:", url)
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(url, headers=headers)
    response.raise_for_status()
    return response.json()

# Download the product
def download_product(token, product_id, output_path):
    url = f"https://zipper.dataspace.copernicus.eu/odata/v1/Products({product_id})/$value"
    headers = {"Authorization": f"Bearer {token}"}
    session = requests.Session()
    session.headers.update(headers)

    response = session.get(url, allow_redirects=False)
    while response.status_code in (301, 302, 303, 307):
        url = response.headers["Location"]
        response = session.get(url, allow_redirects=False)

    final_response = session.get(url, stream=True)
    final_response.raise_for_status()

    with open(output_path, "wb") as f:
        for chunk in final_response.iter_content(chunk_size=8192):
            f.write(chunk)
    print(f"Downloaded to {output_path}")

# Main execution
if __name__ == "__main__":
    # Get access token
    token = get_access_token(username, password)

    # Search for data
    result = search_sentinel2(token)
    print("Full API response:", result)
    if not result["value"]:
        print("No Sentinel-2 L1C products found for the specified criteria.")
        exit()

    product = result["value"][0]
    product_id = product["Id"]
    product_name = product["Name"]
    output_zip = f"{product_name}.zip"

    # Download the product
    download_product(token, product_id, output_zip)

